import logging
import os
import asyncio
import threading
from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command
from dotenv import load_dotenv
from flask import Flask

# ุชุญููู ูุชุบูุฑุงุช ุงูุจูุฆุฉ
load_dotenv()

# ุฅุนุฏุงุฏ ุชุณุฌูู ุงูุฃุฎุทุงุก
logging.basicConfig(level=logging.INFO)

# ุฌูุจ ุงูุชููู ูู ูุชุบูุฑุงุช ุงูุจูุฆุฉ
TOKEN = os.getenv("BOT_TOKEN")

if not TOKEN:
    raise ValueError("๐จ ุฎุทุฃ: ูู ูุชู ุงูุนุซูุฑ ุนูู BOT_TOKEN ูู ูุชุบูุฑุงุช ุงูุจูุฆุฉ!")

# ุชููุฆุฉ ุงูุจูุช ูุงูููุฒุน
bot = Bot(token=TOKEN)
dp = Dispatcher()

# ๐ **ุฌููุน ุงูุฑุณุงุฆู ุงูุนุดุฑ ูุงููุฉ ุจุงููุบุฉ ุงูุนุฑุจูุฉ ููุท + ุงูุฅุถุงูุฉ ุงูุฃุฎูุฑุฉ**
messages = [
    "Hemleghkm luna ๐\n\n"
    "ุฃูุชู ูุซู ุงูููุฑุ ุชุถูุฆูู ุงูุณูุงุก ูุชููุฑูู ุญูุงุชูุ Luna ๐\n"
    "ุงูููุฑ ูุธู ุฏุงุฆููุง ูู ุงูุณูุงุกุ ูุฃูุชู ุฏุงุฆููุง ูู ููุจูุ ูุซู Luna ุชุญุช ุถูุก ุงูููู.",

    "ุฃุนูู ุฃูู ุฎุงุฆูุฉ ููุง ูู ูุงุฏูุ ููู ุงููููููุ ููุฏ ุงูุชููุช ุจู ุตุบูุฑุฉ ูู ุงูุซุงูููุฉ ููู ุฃุฑุฏ ุฅุถุงุนุชู ูู ูุฏู ูุฃูู ูุชุงุฉ ูุซุงููุฉ ุจุงููุณุจุฉ ููุ ูุซู ุงูููุฑ ุงูุฐู ูุธูุฑ ูุฑุฉ ูู ูููุฉุ ููุง ุฃุฑูุฏ ุฃู ุฃุบูู ุนูู ุฃุจุฏูุง.",

    "ูู ุญูู ุงูุฎููุ ููู ูุฏููุง ุงููู. ูู ูุถููุ ููููู ุญุชู ุขุฎุฑ ูุญุธุฉุ ูุฃูุง ุงูุชุธุฑุชู ูุซูุฑูุงุ ูููุฏุงูู ูุคูู ููุคุฐู ูู ุฌุฏูุง.\n"
    "ุฃุนุฑู ุฃููู ูุณุชู ุจุฃูุถู ุญุงูุ ูุงุชุฎุงุฐ ูุฑุงุฑ ููุฐุง ุตุนุจ ุฌุฏูุงุ ูููู ุฃููู ุฑุบุจุชู ูู ุญูุงูุฉ ููุณูู ูููุณูุชูู.\n"
    "ูููู ุฃุฎุจุฑุชูู ุฃูู ูุณุชู ุดุฎุตูุง ููุนุจ ุจููุ ูุฅููุง ุฃุฑุฏุชู ุฃู ุฃููู ุญูุงุชู ูุนููุ ูุฃุนูุด ูู ูุญุธุงุชูุง ูุนููุ ูุฃุญูู ุทููุญุงุชูุ ูุฃูุชู ููุฌูุฏุฉ ูู ูู ุฎุทุทู.",

    "ูุงูุช 4 ุฃุดูุฑ ููุทุ ููู ูุฑุช ุจุงููุณุจุฉ ูู ูุงูุณููุงุช. ุดุงุฑููุง ูุนูุง ุงููุซูุฑ ูู ุงููุตุตุ ุงููุฑุญุ ูุงูุฃุญุฒุงู.\n"
    "ุฃุนุฑู ุฃููู ุฎุงุฆูุฉุ ููุง ุชุณุชุทูุนูู ูุถุน ุซูุชู ุจุณูููุฉ. ุชุฎุดูู ุฃู ูุชู ูุณุฑู ูุฅูุฐุงุคูุ ูููู ุณุฃูุนู ุฃู ุดูุก ูุญูุงูุชู ูููุน ุงูุญุฒู ุนููู.\n"
    "ุฃูุง ููุง ููุท ูุฃุฌูููุ ูุฌุนููู ุณุนูุฏุฉุ ูุฅุฑุถุงุฆููุ ูุฎุฏูุชูู. ุฅุฐุง ุดุนุฑุชู ุจุงูุชุนุจ ููู ุฃู ูู ุนูุงูุชูุงุ ุฎุฐู ุงุณุชุฑุงุญุฉ ูุงุทูุจููุง ูููุ ููู ูุง ุชูุทุนู ุนูุงูุชูุง ููุฃุจุฏ.",

    "ูู ูุฐุง ููุฏุฑ ูู ุงูุจุฏุงูุฉุ ูุฃุญุณุงุณู ูููู ุฅูู ููุชุจ ููุง ุฃู ูููู ูุนูุง. ููุท ุงููู ูุฎุชุจุฑ ุทุฑููุฉ ุณุนููุง ููุฃูุฑุ ูุฃูู ูุง ูุถุน ุดูุฆูุง ูู ุงููููุจ ุฅูุง ููู ูุนูู ุจุฃูู ุณูุชุญููุ ููู ูุฌุจ ุนูู ุงูุฅูุณุงู ุฃู ูุนูุฏู ููุทูุนู ููููู ุจุงูุฏุนุงุก.\n"
    "ุดุนูุฑูุง ูุงุญุฏุ ููุฑูุฏ ุงูุญูุงู ููุท. ููููู ุญุชู ุขุฎุฑ ูุญุธุฉุ ูุงููู ูุนูุงุ ููู ุนูููู ูุถุน ุงูุณุฌุงุฏุฉ ูุงูููุงู ุจุงูุฏุนุงุก.",

    "ุฃุฑุฌู ูููู ุชููู ูุดุงุนุฑู ุชุฌุงููุ ุฃูุง ุตุงุฏู ูู ููููุ ูุญููุง ุณูููู ูุคูููุง ููุคุฐููุง ูู ุฃู ุชุชุฑูููู.\n"
    "ูููุงุ ุฃุญุจูู ุญุจูุง ูุจูุฑูุงุ ููู ุฃุคุฐููู.\n"
    "ุฃูุง ุนู ุงููุฏุฑุ ูุฏุนุงุคูุง ูุงุณุชูุฑุงุฑูุง ูู ุนูุงูุชูุง ุฑุบู ูู ุดูุก ุณูุญูู ููุง ูุฑุงุฏูุง.",

    "ูุฐุง ูู ูุถููุ ุฃูุง ุฃุชุฑุฌุงูู ูุง ุฐุงุช ุงููุฌู ุงูุฌููู ูุงูููุจ ุงูุตุฎุฑู ๐ฅฒ๐๐ชจุ ุฃุฑุฌููู ูุง ุชุชุฑูููู.\n"
    "ูู ูุถููุ ุฃุณุฃู ุงููู ุฃู ูุฌุงุฒููู ููุญูุธูู ููุนูุชููุ ููู ุฃูุณู ุทุงููุง ุจููุช ุญููุง.\n"
    "ุฃุฑุฌููู ูููุงุ ุฃูุง ุฃุญุจููุ ูุง ุชุฐูุจู.",

    "ุฃุฑุฌู ุฃู ุชุชูููู ุฅุตุฑุงุฑู ุนูู ุจูุงุฆููุ ุณุฃูู ุฏููุงู ุจุฌุงูุจูู ูุฃุชููููู ุฏุงุฆููุงุ ููู ูุง ุชุฐูุจูุ ูุฐุง ุทูุจูุ ุฃุฑุฌููู ๐\n"
    "ุฃุฑุฌูููุ ุณุฃุจูู ุฃุญุงูู ุญุชู ูุนูุฏุ ุญุชู ูู ุจุนุฏ 5 ุณููุงุชุ ุณุฃุฑุณู ุทูุจ ูุชุงุจุนุฉ ูุฅูุณุชุง ุงูุฎุงุต ุจููุ ุฃูุง ูุง ุฃูุจููู ุฅูุง ุฃูุชู.\n"
    "ุฃุญุจูู ุญููุง ูู ููุจูุ ุฃุฑุฌู ุฃู ุชูุฏูุฑู ูุดุงุนุฑู ููุง ุชุฑูุถู ุทูุจูุ ููุฐุง ุณููุณุฑูู ููุญุทููู ุญููุง. ูู ูุถููู ูููุง.",

    "ุญุณูุงุ ุจูุง ุฃููู ูุตูุชู ููุงุ ูุฃูุชู ูู ููุงูุฉ ุงูุจูุช. ููุฏ ููุช ุจุจุฑูุฌุชู ุจุงููุงุชูุ ูุฐุง ุฃุฑุฌู ุฃู ูุดุชุบู ุจุดูู ุฌูุฏ! ๐\n"
    "ููุฏ ุนุจุฑุช ุนู ูุดุงุนุฑู ูุฑุฃูู ุงูุตุฑูุญ ูููุ ุฃุชููู ุชููููู ูุฃู ุชูุจูู ุจู ูู ุฌุฏูุฏ ููุณุชูุฑ. ูุฐู ุงููุดุงูู ูุงูุนูุจุงุช ุชุธูุฑ ูู ุฃู ุนูุงูุฉุ ููู ุนูููุง ุฃู ูุณุชูุฑ.\n"
    "'ุงูุญู ุงูุบูุทุฉ ูุงููุดูู ุนูุงุฌุงู ุนูุงูุชูุงุ ููุดู ุชูุญู ุงูุนูุงูุฉ ุนูุงุฌุงู ุงููุดูู ูุงูุบูุทุฉ.' โ ุงููููุณูู ุฅุณูุงู.",

    "**ayen ak imxdmegh**"
]

# ุฅุนุฏุงุฏ ุงูุฃุฒุฑุงุฑ
def get_keyboard(index):
    if index < len(messages) - 1:
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="๐ ุงูุชุงูู", callback_data=f"next_{index + 1}")]
        ])
    else:
        keyboard = None
    return keyboard

# ุจุฏุก ุงููุญุงุฏุซุฉ
@dp.message(Command("start"))
async def send_welcome(message: types.Message):
    await message.answer(messages[0], reply_markup=get_keyboard(0))

# ุงูุชููู ุจูู ุงูุฑุณุงุฆู
@dp.callback_query(lambda c: c.data.startswith("next_"))
async def process_callback(callback_query: types.CallbackQuery):
    index = int(callback_query.data.split("_")[1])
    await callback_query.message.edit_text(messages[index], reply_markup=get_keyboard(index))

# ๐ฅ **ุฅุถุงูุฉ Flask ููุญูุงุธ ุนูู ุชุดุบูู ุงูุจูุช**
app = Flask(__name__)

@app.route('/')
def home():
    return "Bot is running!"

def run_flask():
    app.run(host="0.0.0.0", port=8080)

threading.Thread(target=run_flask, daemon=True).start()

# ุชุดุบูู ุงูุจูุช
async def main():
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())import logging
import os
import asyncio
import threading
from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command
from dotenv import load_dotenv
from flask import Flask

# ุชุญููู ูุชุบูุฑุงุช ุงูุจูุฆุฉ
load_dotenv()

# ุฅุนุฏุงุฏ ุชุณุฌูู ุงูุฃุฎุทุงุก
logging.basicConfig(level=logging.INFO)

# ุฌูุจ ุงูุชููู ูู ูุชุบูุฑุงุช ุงูุจูุฆุฉ
TOKEN = os.getenv("BOT_TOKEN")

if not TOKEN:
    raise ValueError("๐จ ุฎุทุฃ: ูู ูุชู ุงูุนุซูุฑ ุนูู BOT_TOKEN ูู ูุชุบูุฑุงุช ุงูุจูุฆุฉ!")

# ุชููุฆุฉ ุงูุจูุช ูุงูููุฒุน
bot = Bot(token=TOKEN)
dp = Dispatcher()

# ๐ **ุฌููุน ุงูุฑุณุงุฆู ุงูุนุดุฑ ูุงููุฉ ุจุงููุบุฉ ุงูุนุฑุจูุฉ ููุท + ุงูุฅุถุงูุฉ ุงูุฃุฎูุฑุฉ**
messages = [
    "Hemleghkm luna ๐\n\n"
    "ุฃูุชู ูุซู ุงูููุฑุ ุชุถูุฆูู ุงูุณูุงุก ูุชููุฑูู ุญูุงุชูุ Luna ๐\n"
    "ุงูููุฑ ูุธู ุฏุงุฆููุง ูู ุงูุณูุงุกุ ูุฃูุชู ุฏุงุฆููุง ูู ููุจูุ ูุซู Luna ุชุญุช ุถูุก ุงูููู.",

    "ุฃุนูู ุฃูู ุฎุงุฆูุฉ ููุง ูู ูุงุฏูุ ููู ุงููููููุ ููุฏ ุงูุชููุช ุจู ุตุบูุฑุฉ ูู ุงูุซุงูููุฉ ููู ุฃุฑุฏ ุฅุถุงุนุชู ูู ูุฏู ูุฃูู ูุชุงุฉ ูุซุงููุฉ ุจุงููุณุจุฉ ููุ ูุซู ุงูููุฑ ุงูุฐู ูุธูุฑ ูุฑุฉ ูู ูููุฉุ ููุง ุฃุฑูุฏ ุฃู ุฃุบูู ุนูู ุฃุจุฏูุง.",

    "ูู ุญูู ุงูุฎููุ ููู ูุฏููุง ุงููู. ูู ูุถููุ ููููู ุญุชู ุขุฎุฑ ูุญุธุฉุ ูุฃูุง ุงูุชุธุฑุชู ูุซูุฑูุงุ ูููุฏุงูู ูุคูู ููุคุฐู ูู ุฌุฏูุง.\n"
    "ุฃุนุฑู ุฃููู ูุณุชู ุจุฃูุถู ุญุงูุ ูุงุชุฎุงุฐ ูุฑุงุฑ ููุฐุง ุตุนุจ ุฌุฏูุงุ ูููู ุฃููู ุฑุบุจุชู ูู ุญูุงูุฉ ููุณูู ูููุณูุชูู.\n"
    "ูููู ุฃุฎุจุฑุชูู ุฃูู ูุณุชู ุดุฎุตูุง ููุนุจ ุจููุ ูุฅููุง ุฃุฑุฏุชู ุฃู ุฃููู ุญูุงุชู ูุนููุ ูุฃุนูุด ูู ูุญุธุงุชูุง ูุนููุ ูุฃุญูู ุทููุญุงุชูุ ูุฃูุชู ููุฌูุฏุฉ ูู ูู ุฎุทุทู.",

    "ูุงูุช 4 ุฃุดูุฑ ููุทุ ููู ูุฑุช ุจุงููุณุจุฉ ูู ูุงูุณููุงุช. ุดุงุฑููุง ูุนูุง ุงููุซูุฑ ูู ุงููุตุตุ ุงููุฑุญุ ูุงูุฃุญุฒุงู.\n"
    "ุฃุนุฑู ุฃููู ุฎุงุฆูุฉุ ููุง ุชุณุชุทูุนูู ูุถุน ุซูุชู ุจุณูููุฉ. ุชุฎุดูู ุฃู ูุชู ูุณุฑู ูุฅูุฐุงุคูุ ูููู ุณุฃูุนู ุฃู ุดูุก ูุญูุงูุชู ูููุน ุงูุญุฒู ุนููู.\n"
    "ุฃูุง ููุง ููุท ูุฃุฌูููุ ูุฌุนููู ุณุนูุฏุฉุ ูุฅุฑุถุงุฆููุ ูุฎุฏูุชูู. ุฅุฐุง ุดุนุฑุชู ุจุงูุชุนุจ ููู ุฃู ูู ุนูุงูุชูุงุ ุฎุฐู ุงุณุชุฑุงุญุฉ ูุงุทูุจููุง ูููุ ููู ูุง ุชูุทุนู ุนูุงูุชูุง ููุฃุจุฏ.",

    "ูู ูุฐุง ููุฏุฑ ูู ุงูุจุฏุงูุฉุ ูุฃุญุณุงุณู ูููู ุฅูู ููุชุจ ููุง ุฃู ูููู ูุนูุง. ููุท ุงููู ูุฎุชุจุฑ ุทุฑููุฉ ุณุนููุง ููุฃูุฑุ ูุฃูู ูุง ูุถุน ุดูุฆูุง ูู ุงููููุจ ุฅูุง ููู ูุนูู ุจุฃูู ุณูุชุญููุ ููู ูุฌุจ ุนูู ุงูุฅูุณุงู ุฃู ูุนูุฏู ููุทูุนู ููููู ุจุงูุฏุนุงุก.\n"
    "ุดุนูุฑูุง ูุงุญุฏุ ููุฑูุฏ ุงูุญูุงู ููุท. ููููู ุญุชู ุขุฎุฑ ูุญุธุฉุ ูุงููู ูุนูุงุ ููู ุนูููู ูุถุน ุงูุณุฌุงุฏุฉ ูุงูููุงู ุจุงูุฏุนุงุก.",

    "ุฃุฑุฌู ูููู ุชููู ูุดุงุนุฑู ุชุฌุงููุ ุฃูุง ุตุงุฏู ูู ููููุ ูุญููุง ุณูููู ูุคูููุง ููุคุฐููุง ูู ุฃู ุชุชุฑูููู.\n"
    "ูููุงุ ุฃุญุจูู ุญุจูุง ูุจูุฑูุงุ ููู ุฃุคุฐููู.\n"
    "ุฃูุง ุนู ุงููุฏุฑุ ูุฏุนุงุคูุง ูุงุณุชูุฑุงุฑูุง ูู ุนูุงูุชูุง ุฑุบู ูู ุดูุก ุณูุญูู ููุง ูุฑุงุฏูุง.",

    "ูุฐุง ูู ูุถููุ ุฃูุง ุฃุชุฑุฌุงูู ูุง ุฐุงุช ุงููุฌู ุงูุฌููู ูุงูููุจ ุงูุตุฎุฑู ๐ฅฒ๐๐ชจุ ุฃุฑุฌููู ูุง ุชุชุฑูููู.\n"
    "ูู ูุถููุ ุฃุณุฃู ุงููู ุฃู ูุฌุงุฒููู ููุญูุธูู ููุนูุชููุ ููู ุฃูุณู ุทุงููุง ุจููุช ุญููุง.\n"
    "ุฃุฑุฌููู ูููุงุ ุฃูุง ุฃุญุจููุ ูุง ุชุฐูุจู.",

    "ุฃุฑุฌู ุฃู ุชุชูููู ุฅุตุฑุงุฑู ุนูู ุจูุงุฆููุ ุณุฃูู ุฏููุงู ุจุฌุงูุจูู ูุฃุชููููู ุฏุงุฆููุงุ ููู ูุง ุชุฐูุจูุ ูุฐุง ุทูุจูุ ุฃุฑุฌููู ๐\n"
    "ุฃุฑุฌูููุ ุณุฃุจูู ุฃุญุงูู ุญุชู ูุนูุฏุ ุญุชู ูู ุจุนุฏ 5 ุณููุงุชุ ุณุฃุฑุณู ุทูุจ ูุชุงุจุนุฉ ูุฅูุณุชุง ุงูุฎุงุต ุจููุ ุฃูุง ูุง ุฃูุจููู ุฅูุง ุฃูุชู.\n"
    "ุฃุญุจูู ุญููุง ูู ููุจูุ ุฃุฑุฌู ุฃู ุชูุฏูุฑู ูุดุงุนุฑู ููุง ุชุฑูุถู ุทูุจูุ ููุฐุง ุณููุณุฑูู ููุญุทููู ุญููุง. ูู ูุถููู ูููุง.",

    "ุญุณูุงุ ุจูุง ุฃููู ูุตูุชู ููุงุ ูุฃูุชู ูู ููุงูุฉ ุงูุจูุช. ููุฏ ููุช ุจุจุฑูุฌุชู ุจุงููุงุชูุ ูุฐุง ุฃุฑุฌู ุฃู ูุดุชุบู ุจุดูู ุฌูุฏ! ๐\n"
    "ููุฏ ุนุจุฑุช ุนู ูุดุงุนุฑู ูุฑุฃูู ุงูุตุฑูุญ ูููุ ุฃุชููู ุชููููู ูุฃู ุชูุจูู ุจู ูู ุฌุฏูุฏ ููุณุชูุฑ. ูุฐู ุงููุดุงูู ูุงูุนูุจุงุช ุชุธูุฑ ูู ุฃู ุนูุงูุฉุ ููู ุนูููุง ุฃู ูุณุชูุฑ.\n"
    "'ุงูุญู ุงูุบูุทุฉ ูุงููุดูู ุนูุงุฌุงู ุนูุงูุชูุงุ ููุดู ุชูุญู ุงูุนูุงูุฉ ุนูุงุฌุงู ุงููุดูู ูุงูุบูุทุฉ.' โ ุงููููุณูู ุฅุณูุงู.",

    "**ayen ak imxdmegh**"
]

# ุฅุนุฏุงุฏ ุงูุฃุฒุฑุงุฑ
def get_keyboard(index):
    if index < len(messages) - 1:
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="๐ ุงูุชุงูู", callback_data=f"next_{index + 1}")]
        ])
    else:
        keyboard = None
    return keyboard

# ุจุฏุก ุงููุญุงุฏุซุฉ
@dp.message(Command("start"))
async def send_welcome(message: types.Message):
    await message.answer(messages[0], reply_markup=get_keyboard(0))

# ุงูุชููู ุจูู ุงูุฑุณุงุฆู
@dp.callback_query(lambda c: c.data.startswith("next_"))
async def process_callback(callback_query: types.CallbackQuery):
    index = int(callback_query.data.split("_")[1])
    await callback_query.message.edit_text(messages[index], reply_markup=get_keyboard(index))

# ๐ฅ **ุฅุถุงูุฉ Flask ููุญูุงุธ ุนูู ุชุดุบูู ุงูุจูุช**
app = Flask(__name__)

@app.route('/')
def home():
    return "Bot is running!"

def run_flask():
    app.run(host="0.0.0.0", port=8080)

threading.Thread(target=run_flask, daemon=True).start()

# ุชุดุบูู ุงูุจูุช
async def main():
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())
